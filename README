## Git-O-Mator

  Simple scripts to help automate a Git based work flow.

## New_repo script ############################################################

  ## Configuration

  You will need to replace REMOTE_USER="user" with an actual user on your 
  hosting account, adjust REMOTE_HOST="123.123.123.123" to point to your 
  accounts IP address, and edit REMOTE_REPO_PATH="/path/to/repos/" with 
  whatever path you wish to contain your Git repositories on your remote host.

  Once that is done, provide the script with executable permissions.

  $ chmod +x new_repo

  Optionally add the location to your PATH.  That's it. 

  ## Usage

  $ ./new_repo testing

  You will end up with /home/user/repos/testing.git on your remote host, 
  and ./testing locally. From ./testing you can git push to send commits to 
  the remote repository, and git pull to retrieve from the remote repository.
  
## Hack script ################################################################

  ## Credits
  Variation on ReinH's script for managing the git process
  as documented here: http://reinh.com/blog/2008/08/27/hack-and-and-ship.html

  ## Configuration
  
  You can set DEFAULT_BRANCH="development" to whatever branch you would like to 
  default to.
  
  ## Usage

  $ hack on

  This will automatically switch to the default branch which you can easily 
  configure. Alternatively you can use:

  $ hack on foo

  Where "foo" is the name of the specific branch you wish to use.  If the 
  branch does not exist, it is created.  

  $ hack sync
  
  Rebases with the master.
  
  $ hack push
  
  Merge and pushes to your remote repository.

  It also supports Rein's ssp (Simple Software Process) with:

  $ hack ssp

  Which is equivalent to hack sync && hack push.  If you prefer 
  hack sync && rake && hack push, then you may use the -t flag for testing:

  $ hack ssp -t
